trigger: none

name: 'linux_ci_$(Date:yyyyMMdd)_$(Rev:r)'

# gid of video and render group on gcramdrr1-mi100-085 and -86
variables:
  - name: video
    value: 44
  - name: render
    value: 109
  - name: RocmVersion
    value: 5.5

jobs:
- job: Linux_Build
  workspace:
    clean: all
  pool: onnxruntime-Ubuntu2004-AMD-CPU
  timeoutInMinutes: 60

  steps:
  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()

  - checkout: self
    clean: true
    submodules: recursive

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/migraphx-ci-pipeline-env.Dockerfile
      Context: tools/ci_build/github/linux/docker
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
      Repository: onnxruntimetrainingmigraphx-cibuild-rocm$(RocmVersion)

  - task: Cache@2
    inputs:
      key: '"ccache" | "$(Build.SourceBranch)" | "$(Build.SourceVersion)"'
      path: $(CCACHE_DIR)
      restoreKeys: |
        "ccache" | "$(Build.SourceBranch)"
        "ccache"
      cacheHitVar: CACHE_RESTORED
    displayName: Cach Task

  - script: |
      sudo mkdir -p $(Pipeline.Workspace)/ccache
    condition: ne(variables.CACHE_RESTORED, 'true')
    displayName: Create Cache Dir

  - task: CmdLine@2
    inputs:
      script: |
        docker run --rm \
          --security-opt seccomp=unconfined \
          --shm-size=1024m \
          --device=/dev/kfd \
          --device=/dev/dri/renderD$DRIVER_RENDER \
          --group-add $(video) \
          --group-add $(render) \
          --user onnxruntimedev \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --workdir /onnxruntime_src \
          onnxruntimetrainingmigraphx-cibuild-rocm$(RocmVersion) \
          /bin/bash -c "
            set -ex; \
            env; \
            ccache -s; \
            python tools/ci_build/build.py \
              --config Release \
              --cmake_extra_defines \
                CMAKE_HIP_COMPILER=/opt/rocm/llvm/bin/clang++ \
                onnxruntime_BUILD_KERNEL_EXPLORER=OFF \
                onnxruntime_USE_COMPOSABLE_KERNEL=OFF \
              --mpi_home /opt/ompi \
              --use_migraphx \
              --rocm_version=$(RocmVersion) \
              --rocm_home /opt/rocm \
              --nccl_home /opt/rocm \
              --update \
              --build_dir /build \
              --build \
              --parallel 32 \
              --build_wheel \
              --skip_submodule_sync \
              --skip_tests --cmake_path /usr/bin/cmake --ctest_path /usr/bin/ctest; \
            ccache -sv; \
            ccache -z"
      workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Build onnxruntime'

  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact'
    inputs:
      artifactName: 'drop-linux'
      targetPath: '$(Build.BinariesDirectory)/Release'

  - template: templates/explicitly-defined-final-tasks.yml

- job: Linux_Test
  workspace:
    clean: all
  pool: AMD_GPU
  timeoutInMinutes: 60

  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Pipeline Artifact'
    inputs:
      buildType: 'current'
      artifactName: 'drop-linux'
      targetPath: '$(Build.BinariesDirectory)/Release'

  - checkout: self
    clean: true
    submodules: recursive

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/linux/docker/migraphx-ci-pipeline-env.Dockerfile
      Context: tools/ci_build/github/linux/docker
      DockerBuildArgs: "--build-arg BUILD_UID=$( id -u )"
      Repository: onnxruntimetrainingmigraphx-cibuild-rocm$(RocmVersion)

  - task: CmdLine@2
    inputs:
      script: |
        docker run --rm \
          --security-opt seccomp=unconfined \
          --shm-size=1024m \
          --device=/dev/kfd \
          --device=/dev/dri/renderD$DRIVER_RENDER \
          --group-add $(video) \
          --group-add $(render) \
          --user onnxruntimedev \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --workdir /build/Release \
          onnxruntimetrainingmigraphx-cibuild-rocm$(RocmVersion) \
            /onnxruntime_src/tools/ci_build/github/pai/migraphx_test_launcher.sh
      workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Run onnxruntime unit tests'

  - template: templates/clean-agent-build-directory-step.yml
